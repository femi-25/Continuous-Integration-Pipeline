name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Start services with Docker Compose
        run: |
          docker-compose up -d

      - name: MongoDB status
        run: |
          docker-compose logs mongodb

      - name: Check MongoDB Connection Status with Python
        run: |
          python -c "
import pymongo
from pymongo import MongoClient
try:
    client = MongoClient('mongodb://localhost:27017/')
    client.admin.command('ping')
    print('MongoDB connection successful!')
except Exception as e:
    print(f'Error: {e}')
"


      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and tag Docker image
        run: |
          docker build -t api-service:${{ github.sha }} .
          docker tag api-service:${{ github.sha }} registry.example.com/api-service:${{ github.sha }}

      - name: Push Docker image to registry
        run: |
          docker push registry.example.com/api-service:${{ github.sha }}

      - name: Run tests with pytest
        env:
          MONGO_URI: mongodb://mongodb:27017/
        run: pytest

      - name: Tear down Docker Compose
        if: always()
        run: |
          docker-compose down

      - name: Deploy
        env:
          DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
        run: |
          curl -X POST -H "Authorization: Bearer ${DEPLOY_TOKEN}" http://your-deployment-service/deploy
